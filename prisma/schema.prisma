generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Transaction {
  id              String    @id
  accountId       String
  date            DateTime
  amount          Decimal
  merchant        String?
  categoryId      String?
  note            String?
  custom_category String?
  isManual        Boolean   @default(false)
  importedAt      DateTime  @default(now())
  importId        String?
  category        Category? @relation(fields: [categoryId], references: [id])
  account         Account   @relation(fields: [accountId], references: [id], onDelete: Cascade)
  import          Import?   @relation(fields: [importId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model Import {
  id           String        @id @default(cuid())
  filename     String
  checksum     String
  accountId    String
  importedAt   DateTime      @default(now())
  account      Account       @relation(fields: [accountId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("imports")
}

model Budget {
  id         String    @id @default(cuid())
  categoryId String
  amount     Decimal
  startDate  DateTime
  endDate    DateTime?
  createdAt  DateTime  @default(now())
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([categoryId, startDate], name: "categoryId_startDate")
  @@map("budgets")
}

model Account {
  id           String        @id @default(cuid())
  name         String
  accountType  String
  emoji        String
  createdAt    DateTime      @default(now())
  imports      Import[]
  transactions Transaction[]

  @@map("accounts")
}

model Category {
  id           String        @id @default(cuid())
  name         String        @unique
  emoji        String
  createdAt    DateTime      @default(now())
  budgets      Budget[]
  transactions Transaction[]

  @@map("categories")
}
